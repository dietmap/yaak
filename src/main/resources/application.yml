server:
  port: 8080
spring:
  application:
    name: yaak-api
  profiles:
    active: sandbox
  output:
    ansi:
      enabled: always
  security:
    oauth2:
       # Only required for yaak.security.type=OAUTH
#      resourceserver:
#        jwt:
          # Note the trailing slash is important!
#          issuer-uri: https://oauth-priovider.com/
      client:
        registration:
          user-app-client-password:
            provider: oauth-provider
            client-id: client_id
            client-secret: client_secret
            authorization-grant-type: password
            #            scope: message.read,message.write
            username: username
            password: password
        provider:
          oauth-provider:
            token-uri: https://your-oauth-provider.com/oauth/token

logging:
  level:
    sun.net: INFO
    org.springframework.web: INFO
    com.dietmap: INFO

yaak:
  security:
    # Possible values: API_KEY, OAUTH, NONE
    type: API_KEY
    api-key: ${YAAK_API_KEY:MySuperApiKey123}

  appstore-base-url: ${YAAK_APPSTORE_BASE_URL:https://sandbox.itunes.apple.com}
  # Called when the /api/subscription/statusUpdateNotification endpoint is called
  subscription-webhook-url: ${YAAK_SUBSCRIPTION_WBEHOOK_URL:http://localhost:8080/subscriptions/notifications/yaak}

  google-play:
    enabled: false
    # Base64 encoded google service account api key allowing access to the Google Play Developer Publishing API and PubSub app subscriptions topic on behalf of the application
    service-account-api-key-base64: e30K
    service-account-email: account@account.iam.gserviceaccount.com
    application-name: "App name in Google Play"

  app-store:
      enabled: true

